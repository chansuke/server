connect  con1, localhost, user1, , ;
select "MARKER_BEGIN" as marker;
marker
MARKER_BEGIN
select "This is simple statement one" as payload;
payload
This is simple statement one
select "This is simple statement two" as payload;
payload
This is simple statement two
select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload;
$$
payload
This is the first part of a multi query
payload
And this is the second part of a multi query
payload
With a third part to make things complete
select "MARKER_END" as marker;
marker
MARKER_END
select "Con1 is done with payload" as status;
status
Con1 is done with payload
connection default;
set @con1_tid = (select thread_id from performance_schema.threads
where processlist_user = 'user1');
select (@con1_tid is not null) as expected;
expected
1
set @marker_begin = (select event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_BEGIN%" and thread_id = @con1_tid);
select (@marker_begin is not null) as expected;
expected
1
set @marker_end = (select end_event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_END%" and thread_id = @con1_tid);
select (@marker_end is not null) as expected;
expected
1
show global status like "performance_schema%";
Variable_name	Value
Performance_schema_accounts_lost	0
Performance_schema_cond_classes_lost	0
Performance_schema_cond_instances_lost	0
Performance_schema_digest_lost	0
Performance_schema_file_classes_lost	0
Performance_schema_file_handles_lost	0
Performance_schema_file_instances_lost	0
Performance_schema_hosts_lost	0
Performance_schema_index_stat_lost	0
Performance_schema_locker_lost	0
Performance_schema_memory_classes_lost	0
Performance_schema_metadata_lock_lost	0
Performance_schema_mutex_classes_lost	0
Performance_schema_mutex_instances_lost	0
Performance_schema_nested_statement_lost	0
Performance_schema_prepared_statements_lost	0
Performance_schema_program_lost	0
Performance_schema_rwlock_classes_lost	0
Performance_schema_rwlock_instances_lost	0
Performance_schema_session_connect_attrs_lost	0
Performance_schema_socket_classes_lost	0
Performance_schema_socket_instances_lost	0
Performance_schema_stage_classes_lost	0
Performance_schema_statement_classes_lost	0
Performance_schema_table_handles_lost	0
Performance_schema_table_instances_lost	0
Performance_schema_table_lock_stat_lost	0
Performance_schema_thread_classes_lost	0
Performance_schema_thread_instances_lost	0
Performance_schema_users_lost	0
select * from (
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
sql_text as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_statements_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
"(stage)" as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_stages_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
operation as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_waits_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
) all_events
order by relative_event_id asc;
relative_event_id	relative_end_event_id	event_name	comment	nesting_event_type	relative_nesting_event_id
0	22	statement/sql/select	select "MARKER_BEGIN" as marker	NULL	NULL
1	6	stage/sql/starting	(stage)	STATEMENT	0
2	2	wait/io/socket/sql/client_connection	recv	STAGE	1
3	3	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	1
4	4	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	1
5	5	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	1
6	6	wait/io/file/sql/query_log	write	STAGE	1
7	7	stage/sql/checking permissions	(stage)	STATEMENT	0
8	8	stage/sql/Opening tables	(stage)	STATEMENT	0
9	9	stage/sql/After opening tables	(stage)	STATEMENT	0
10	10	stage/sql/init	(stage)	STATEMENT	0
11	11	stage/sql/Optimizing	(stage)	STATEMENT	0
12	12	stage/sql/Executing	(stage)	STATEMENT	0
13	13	stage/sql/End of update loop	(stage)	STATEMENT	0
14	14	stage/sql/Query end	(stage)	STATEMENT	0
15	15	stage/sql/Commit	(stage)	STATEMENT	0
16	16	stage/sql/closing tables	(stage)	STATEMENT	0
17	17	stage/sql/Starting cleanup	(stage)	STATEMENT	0
18	18	stage/sql/Freeing items	(stage)	STATEMENT	0
19	19	wait/io/socket/sql/client_connection	send	STATEMENT	0
20	20	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STATEMENT	0
21	22	stage/sql/Reset for next command	(stage)	STATEMENT	0
22	22	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	21
23	23	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	0
24	24	idle	idle	NULL	NULL
25	47	statement/sql/select	select "This is simple statement one" as payload	NULL	NULL
26	31	stage/sql/starting	(stage)	STATEMENT	25
27	27	wait/io/socket/sql/client_connection	recv	STAGE	26
28	28	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	26
29	29	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	26
30	30	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	26
31	31	wait/io/file/sql/query_log	write	STAGE	26
32	32	stage/sql/checking permissions	(stage)	STATEMENT	25
33	33	stage/sql/Opening tables	(stage)	STATEMENT	25
34	34	stage/sql/After opening tables	(stage)	STATEMENT	25
35	35	stage/sql/init	(stage)	STATEMENT	25
36	36	stage/sql/Optimizing	(stage)	STATEMENT	25
37	37	stage/sql/Executing	(stage)	STATEMENT	25
38	38	stage/sql/End of update loop	(stage)	STATEMENT	25
39	39	stage/sql/Query end	(stage)	STATEMENT	25
40	40	stage/sql/Commit	(stage)	STATEMENT	25
41	41	stage/sql/closing tables	(stage)	STATEMENT	25
42	42	stage/sql/Starting cleanup	(stage)	STATEMENT	25
43	43	stage/sql/Freeing items	(stage)	STATEMENT	25
44	44	wait/io/socket/sql/client_connection	send	STATEMENT	25
45	45	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STATEMENT	25
46	47	stage/sql/Reset for next command	(stage)	STATEMENT	25
47	47	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	46
48	48	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	25
49	49	idle	idle	NULL	NULL
50	72	statement/sql/select	select "This is simple statement two" as payload	NULL	NULL
51	56	stage/sql/starting	(stage)	STATEMENT	50
52	52	wait/io/socket/sql/client_connection	recv	STAGE	51
53	53	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	51
54	54	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	51
55	55	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	51
56	56	wait/io/file/sql/query_log	write	STAGE	51
57	57	stage/sql/checking permissions	(stage)	STATEMENT	50
58	58	stage/sql/Opening tables	(stage)	STATEMENT	50
59	59	stage/sql/After opening tables	(stage)	STATEMENT	50
60	60	stage/sql/init	(stage)	STATEMENT	50
61	61	stage/sql/Optimizing	(stage)	STATEMENT	50
62	62	stage/sql/Executing	(stage)	STATEMENT	50
63	63	stage/sql/End of update loop	(stage)	STATEMENT	50
64	64	stage/sql/Query end	(stage)	STATEMENT	50
65	65	stage/sql/Commit	(stage)	STATEMENT	50
66	66	stage/sql/closing tables	(stage)	STATEMENT	50
67	67	stage/sql/Starting cleanup	(stage)	STATEMENT	50
68	68	stage/sql/Freeing items	(stage)	STATEMENT	50
69	69	wait/io/socket/sql/client_connection	send	STATEMENT	50
70	70	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STATEMENT	50
71	72	stage/sql/Reset for next command	(stage)	STATEMENT	50
72	72	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	71
73	73	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	50
74	74	idle	idle	NULL	NULL
75	96	statement/sql/select	select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
76	82	stage/sql/starting	(stage)	STATEMENT	75
77	77	wait/io/socket/sql/client_connection	recv	STAGE	76
78	78	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	76
79	79	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	76
80	80	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	76
81	81	wait/io/file/sql/query_log	write	STAGE	76
82	82	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	76
83	83	stage/sql/checking permissions	(stage)	STATEMENT	75
84	84	stage/sql/Opening tables	(stage)	STATEMENT	75
85	85	stage/sql/After opening tables	(stage)	STATEMENT	75
86	86	stage/sql/init	(stage)	STATEMENT	75
87	87	stage/sql/Optimizing	(stage)	STATEMENT	75
88	88	stage/sql/Executing	(stage)	STATEMENT	75
89	89	stage/sql/End of update loop	(stage)	STATEMENT	75
90	90	stage/sql/Query end	(stage)	STATEMENT	75
91	91	stage/sql/Commit	(stage)	STATEMENT	75
92	92	stage/sql/closing tables	(stage)	STATEMENT	75
93	93	stage/sql/Starting cleanup	(stage)	STATEMENT	75
94	96	stage/sql/Freeing items	(stage)	STATEMENT	75
95	95	wait/io/socket/sql/client_connection	send	STAGE	94
96	96	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	94
97	114	statement/sql/select	select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
98	100	stage/sql/starting	(stage)	STATEMENT	97
99	99	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	98
100	100	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	98
101	101	stage/sql/checking permissions	(stage)	STATEMENT	97
102	102	stage/sql/Opening tables	(stage)	STATEMENT	97
103	103	stage/sql/After opening tables	(stage)	STATEMENT	97
104	104	stage/sql/init	(stage)	STATEMENT	97
105	105	stage/sql/Optimizing	(stage)	STATEMENT	97
106	106	stage/sql/Executing	(stage)	STATEMENT	97
107	107	stage/sql/End of update loop	(stage)	STATEMENT	97
108	108	stage/sql/Query end	(stage)	STATEMENT	97
109	109	stage/sql/Commit	(stage)	STATEMENT	97
110	110	stage/sql/closing tables	(stage)	STATEMENT	97
111	111	stage/sql/Starting cleanup	(stage)	STATEMENT	97
112	114	stage/sql/Freeing items	(stage)	STATEMENT	97
113	113	wait/io/socket/sql/client_connection	send	STAGE	112
114	114	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	112
115	133	statement/sql/select	select "With a third part to make things complete" as payload	NULL	NULL
116	117	stage/sql/starting	(stage)	STATEMENT	115
117	117	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	116
118	118	stage/sql/checking permissions	(stage)	STATEMENT	115
119	119	stage/sql/Opening tables	(stage)	STATEMENT	115
120	120	stage/sql/After opening tables	(stage)	STATEMENT	115
121	121	stage/sql/init	(stage)	STATEMENT	115
122	122	stage/sql/Optimizing	(stage)	STATEMENT	115
123	123	stage/sql/Executing	(stage)	STATEMENT	115
124	124	stage/sql/End of update loop	(stage)	STATEMENT	115
125	125	stage/sql/Query end	(stage)	STATEMENT	115
126	126	stage/sql/Commit	(stage)	STATEMENT	115
127	127	stage/sql/closing tables	(stage)	STATEMENT	115
128	128	stage/sql/Starting cleanup	(stage)	STATEMENT	115
129	129	stage/sql/Freeing items	(stage)	STATEMENT	115
130	130	wait/io/socket/sql/client_connection	send	STATEMENT	115
131	131	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STATEMENT	115
132	133	stage/sql/Reset for next command	(stage)	STATEMENT	115
133	133	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	132
134	134	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STATEMENT	115
135	135	idle	idle	NULL	NULL
136	158	statement/sql/select	select "MARKER_END" as marker	NULL	NULL
137	142	stage/sql/starting	(stage)	STATEMENT	136
138	138	wait/io/socket/sql/client_connection	recv	STAGE	137
139	139	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STAGE	137
140	140	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	137
141	141	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	137
142	142	wait/io/file/sql/query_log	write	STAGE	137
143	143	stage/sql/checking permissions	(stage)	STATEMENT	136
144	144	stage/sql/Opening tables	(stage)	STATEMENT	136
145	145	stage/sql/After opening tables	(stage)	STATEMENT	136
146	146	stage/sql/init	(stage)	STATEMENT	136
147	147	stage/sql/Optimizing	(stage)	STATEMENT	136
148	148	stage/sql/Executing	(stage)	STATEMENT	136
149	149	stage/sql/End of update loop	(stage)	STATEMENT	136
150	150	stage/sql/Query end	(stage)	STATEMENT	136
151	151	stage/sql/Commit	(stage)	STATEMENT	136
152	152	stage/sql/closing tables	(stage)	STATEMENT	136
153	153	stage/sql/Starting cleanup	(stage)	STATEMENT	136
154	154	stage/sql/Freeing items	(stage)	STATEMENT	136
155	155	wait/io/socket/sql/client_connection	send	STATEMENT	136
156	156	wait/synch/mutex/sql/THD::LOCK_thd_kill	lock	STATEMENT	136
157	158	stage/sql/Reset for next command	(stage)	STATEMENT	136
158	158	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	157
disconnect con1;
